function a_doc_multi = ...
      reportCompareModelToPhysiolNeuron(m_bundle, trial_num, p_bundle, traceset_index, props)

% reportCompareModelToPhysiolNeuron - Generates a report by comparing given model neuron to given physiol neuron.
%
% Usage:
% a_doc_multi = reportCompareModelToPhysiolNeuron(m_bundle, trial_num, p_bundle, 
%						  traceset_index, props)
%
% Description:
%   Generates a report document with:
%	- Figure displaying raw traces of the physiol neuron compared with the model neuron
%	- Figure comparing f-I curves of the two neurons.
%	- Figure comparing spont and pulse spike shapes of the two neurons.
%
% Parameters:
%	m_bundle, p_bundle: dataset_db_bundle objects of the model and physiology neurons.
%	trial_num: Trial number of desired model neuron in m_bundle.
%	traceset_index: TracesetIndex of desired neuron in p_bundle.
%	props: A structure with any optional properties.
%
% Returns:
%	a_doc_multi: A doc_multi object that can be printed as a PS or PDF file.
%
% Example:
% >> printTeXFile(reportCompareModelToPhysiolNeuron(mbundle, 2222, pbundle, 34), 'a.tex')
%
% See also: doc_multi, doc_generate, doc_generate/printTeXFile
%
% $Id$
% Author: Cengiz Gunay <cgunay@emory.edu>, 2006/01/24

% TODO: add a prop (clearPageAtEnd: If given, a page break is inserted at end of document.)

if ~ exist('props')
  props = struct([]);
end

%# Get raw data traces from bundles
phys_trace_d100 = ctFromRows(p_bundle, traceset_index, 100);
phys_trace_h100 = ctFromRows(p_bundle, traceset_index, -100);
phys_trace_id = properTeXLabel([ get(getItem(p_bundle.dataset, traceset_index), 'id') ...
				'(s' num2str(traceset_index) ')']);
phys_db_row = p_bundle.joined_db(p_bundle.joined_db(:, 'TracesetIndex') == traceset_index, :);
phys_db_id = properTeXLabel(p_bundle.joined_db.id);

model_trace_d100 = ctFromRows(m_bundle, trial_num, 100);
model_trace_h100 = ctFromRows(m_bundle, trial_num, -100);
model_trace_id = [ get(get(m_bundle, 'db'), 'id') '(t' num2str(trial_num) ')' ];
mj_db = get(m_bundle, 'joined_db');
model_db_row = mj_db(mj_db(:, 'trial') == trial_num, :);
model_db_id = properTeXLabel(mj_db.id);

a_d100_plot = ...
    superposePlots([plotData(phys_trace_d100), ...
		    plotData(model_trace_d100)], {}, '+100 pA CIP');

a_h100_plot = ...
    superposePlots([plotData(phys_trace_h100), ...
		    plotData(model_trace_h100)], {}, '-100 pA CIP');

%# Make a full figure with raw data traces
short_caption = ['Comparing raw traces of ' model_trace_id ' with ' phys_trace_id '.' ];
caption = [ short_caption ...
	   ' All available raw traces from the physiology neuron are shown.' ];
trace_doc = ...
    doc_plot(plot_stack([a_d100_plot, a_h100_plot], ...
			[0 3000 -150 80], 'y', ...
			['Comparing raw traces of ' model_trace_id ' vs. ' phys_trace_id], ...
			struct('xLabelsPos', 'bottom', 'titlesPos', 'none')), ...
	     caption, ['compare raw traces ' phys_trace_id ' with ' model_trace_id ...
		       ' from ' model_db_id ], ...
	     struct('floatType', 'figure', 'center', 1, ...
		    'height', '.8\textheight', 'shortCaption', short_caption), ...
	     'raw trace figure', struct('orient', 'tall'));

%# spike shape comparisons 
short_caption = [ 'Comparing spike shapes of ' model_trace_id ' to ' phys_trace_id '.' ];
caption = [ short_caption ];
phys_spikes = spikes(phys_trace_d100(1));
phys_spont_sshape = setProp(getSpike(phys_trace_d100(1), phys_spikes, 2), 'quiet', 1);
phys_pulse_sshape = setProp(getPulseSpike(phys_trace_d100(1), phys_spikes, 2), 'quiet', 1);

model_spikes = spikes(model_trace_d100);
model_spont_sshape = setProp(getSpike(model_trace_d100, model_spikes, 2), 'quiet', 1);
model_pulse_sshape = setProp(getPulseSpike(model_trace_d100, model_spikes, 2), 'quiet', 1);
sshape_doc = ...
    doc_plot(plot_stack([superposePlots([plotData(phys_spont_sshape, 'phys.'), ...
					 plotData(model_spont_sshape, 'model')], ...
					{}, '2nd spont. spike'), ...
			 superposePlots([plotData(phys_pulse_sshape, 'phys.'), ...
					 plotData(model_pulse_sshape, 'model')], ...
					{}, '2nd pulse spike')], [], 'x', ...
			['Comparing spike shapes of ' model_trace_id ' vs. ' phys_trace_id ]), ...
	     caption, ['compare spike shapes of ' phys_trace_id ' with ' model_trace_id ...
		       ' from ' model_db_id ], ...
	     struct('floatType', 'figure', 'center', 1, ...
		    'width', '.9\textwidth', 'shortCaption', short_caption), ...
	     'spike shape comparison', struct);

%# fI curves
short_caption = [ 'Comparing f-I curves of ' model_trace_id ' with ' phys_trace_id '.' ];
caption = [ short_caption ];
curve_pAvals = [0 40 100 200];
curve_tests = {'IniSpontSpikeRateISI_0pA', 'PulseIni100msSpikeRateISI_D40pA', ...
	       'PulseIni100msSpikeRateISI_D100pA', 'PulseIni100msSpikeRateISI_D200pA'};
curve_labels = {'current pulse [pA]', 'firing rate [Hz]'};
fIcurve_doc = ...
    doc_plot(superposePlots([plotYTests(phys_db_row, curve_pAvals, curve_tests, ...
					curve_labels, '', ...
					[ phys_trace_id ' (avg)'], ...
					[], struct('quiet', 1)), ...
			     plotYTests(model_db_row, curve_pAvals, curve_tests, ...
					curve_labels, '', ...
					model_trace_id, ...
					[], struct('quiet', 1))], {}, ...
			    ['Comparing f-I curves of ' model_trace_id ' vs. ' phys_trace_id]), ...
	     caption, ['compare f-I curves of ' phys_trace_id ' with ' model_trace_id ...
		       ' from ' model_db_id ], ...
	     struct('floatType', 'figure', 'center', 1, ...
		    'width', '.7\textwidth', 'shortCaption', short_caption), ...
	     'frequency-current curve', struct);

%# Compose the pieces together into larger document
a_doc_multi = doc_multi({trace_doc, sshape_doc, fIcurve_doc}, ...
			'one model to one phys. neuron comparison report');
