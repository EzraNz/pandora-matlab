#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass article
\begin_preamble
\newif\ifpdf 
  \ifx\pdfoutput\undefined \pdffalse % we are not running PDFLaTeX 
\else 
  \pdfoutput=1 % we are running PDFLaTeX 
  \pdftrue 
\fi

\ifpdf 
  \usepackage[pdftex]{graphicx} 
  \pdfcompresslevel=9 
  \DeclareGraphicsExtensions{.pdf,.gif,.png,.jpeg}
  %\pdfpagewidth 11truein \pdfpageheight 8.5truein 
  %\pdfhorigin 1truein \pdfvorigin 1truein
  \usepackage[colorlinks=true,pdftex]{hyperref}
\else 
  \usepackage[dvips]{graphicx} 
  \DeclareGraphicsExtensions{.eps,.pstex,.ps}
  \usepackage[colorlinks=false]{hyperref}
\fi

\usepackage{epsfig}
\usepackage{subfigure}
\usepackage{color}
%\usepackage{html}
\usepackage{ifthen}
\usepackage{url}

%\newcommand{\shorter}{} % Shorter 25 pg for Biol Cybern
%\newcommand{\forspringer}
%\newcommand{\production}{}
%\newcommand{\techreport}{}

%% Common preambles
%\input{../over-delays/formals.tex}
%\input{../over-delays/preamble.tex}

\def\idstring{Id}
\gdef\CVSKeyword$#1 ${\expandafter\cCVSKeyword#1\endcCVSKeyword\relax}
\gdef\cCVSKeyword#1: #2\endcCVSKeyword{%
\gdef\myparam{#1}%
%\typeout{************This is IT:'\myparam'}%
\ifx\idstring\myparam%
\expandafter\cCVSId#2\endcCVSId\relax
\else%
\expandafter\gdef\csname CVS#1\endcsname{#2}%
\fi%
}
\gdef\cCVSId#1 #2\endcCVSId{%
\gdef\CVSIdp{\shortstack{\url{#1} \\ #2}}%
}

%% Version info
\CVSKeyword$Date$ 
\CVSKeyword$Revision$ 
\CVSKeyword$Id$ 
\CVSKeyword$Author$

%% Version number on footer
\fancyfoot[RE,LO]{\small{DDONAS: Prog.'s Manual}}
{\fancyfoot[LE,RO]{\small{Draft v\CVSRevision{} on \CVSDate}}}

%% Fix overlap in headers
\fancyhead[L]{\slshape \leftmark} 
\fancyhead[R]{} % otherwise they overwrite one another
%\bibpunct{(}{)}{;}{a}{,}{,}

%% ignore inside this
\providecommand{\mycomment}{}

\renewenvironment{lyxcode}
   {\small\begin{list}{}{
     \setlength{\leftmargin}{-60pt}
     \setlength{\rightmargin}{\leftmargin}
     \setlength{\listparindent}{0pt}% needed for AMS classes
     \raggedright
     \setlength{\itemsep}{0pt}
     \setlength{\parsep}{0pt}
     \normalfont\ttfamily}%
    \item[]}
   {\end{list}}
\end_preamble
\language english
\inputencoding auto
\fontscheme times
\graphics none
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 1
\use_natbib 1
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle fancy

\layout Standard


\begin_inset ERT
status Inlined

\layout Standard

\backslash 
newcommand{
\backslash 
appname}{PANDORA}
\end_inset 


\layout Title

Plotting and Analysis of Neural Database-Oriented Research Applications
 (PANDORA) Toolbox --- 
\newline 
User's and Programmer's Manual
\layout Author

Cengiz G
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
"
\end_inset 

unay 
\layout Date

Document Revision 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
CVSRevision{}
\end_inset 

, 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
today
\end_inset 


\layout Standard


\begin_inset LatexCommand \tableofcontents{}

\end_inset 


\layout Standard


\begin_inset FloatList figure

\end_inset 


\layout Section

Introduction
\layout Subsection

What is the 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
appname{}
\end_inset 

 Toolbox?
\layout Standard

It is a software package which consists of a collection of 
\noun on 
Matlab
\noun default 
 classes and scripts for creating, analyzing and visualizing databases created
 with data from electrophysiological neuron simulations and recordings.
\layout Subsection

Why did you do it?
\layout Standard

Motivations to create this software were:
\layout Itemize

Aid brute-force and other parameter search methods.
\layout Itemize

Analyze subsets of parameter spaces and special cases.
\layout Itemize

Evaluate robustness of model neurons.
\layout Itemize

Find functional roles of specific conductances.
\layout Subsection

How is it implemented?
\layout Standard

A custom database management system (DBMS) is written from scratch in the
 
\noun on 
Matlab
\noun default 
 language.
 It uses functions from the statistics and signal processing toolboxes of
 
\noun on 
Matlab
\noun default 
, but they are not strictly necessary.
 It does not use 
\noun on 
Matlab
\noun default 
's database (DB) toolbox.
\begin_inset Foot
collapsed true

\layout Standard

At the time of initial design, the author did not have access to the DB
 toolbox.
 Future versions may support the DB toolbox.
\end_inset 


\layout Subsection

Finding your way around
\begin_inset LatexCommand \label{sub:Finding-your-way-around}

\end_inset 


\layout Standard

The source code uses 
\noun on 
Matlab
\noun default 
's documentation system, therefore all methods and classes are documented.
 To get help about all classes, issue the 
\layout LyX-Code

>> help djlab
\layout Standard

at the 
\noun on 
Matlab
\noun default 
 prompt.
 This should give you an overview of available classes.
 Then, to learn about a specific class, ask for the documentation for the
 constructor method.
 For instance, for the 
\family typewriter 
trace
\family default 
 class, issuing
\layout LyX-Code

>> help trace
\layout Standard

gives you the documentation for the constructor together with an overview
 for the class.
 Sometimes, if there are multiple methods with the same name under different
 classes, you may get the wrong documentation.
 In that case, you can specify the class from which to take the method by
 prepending the class name to the method, such as in
\layout LyX-Code

>> help trace/spikes
\layout Standard

In order to learn all methods available for a class, you can use 
\noun on 
Matlab
\noun default 
's 
\family typewriter 
methods
\family default 
 command.
 For the 
\family typewriter 
trace
\family default 
 class, do
\layout LyX-Code

>> methods(trace)
\layout Standard

However, some documentation may be outdated or simply wrong.
 Please report these to the author via e-mail to 
\family typewriter 
cgunay@emory.edu
\family default 
.
\layout Subsection

Overview of this document
\layout Standard


\begin_inset Note
collapsed true

\layout Standard

put this in the preface?
\end_inset 

Next, Section 
\begin_inset LatexCommand \ref{sec:Installation}

\end_inset 

 guides the reader through the installation of the package and other dependencie
s.
 You can skip this section if you already have a running software environment.
 Section 
\begin_inset LatexCommand \ref{sec:Class-hierarchies}

\end_inset 

 introduces the essential components of the software and talks about their
 design decisions.
 You can also skip this part if you're not interested in the guts of the
 system and you are in favor of a quick start.
 The recipes in Section 
\begin_inset LatexCommand \ref{sec:Recipes}

\end_inset 

 provide a tutorial for some common tasks.
 It may be easier for some readers to follow these recipes to jump-start
 using the software.
 However, it is recommended that you familiarize yourself with the basic
 organization of the classes before proceeding into more complex tasks.
 Section 
\begin_inset LatexCommand \ref{sec:Visualization}

\end_inset 

 takes the tutorial approach to describe common visualization tasks.
 Finally, Section 
\begin_inset LatexCommand \ref{sec:Function-Reference}

\end_inset 

 points to the list of individual methods provided by the software.
 These methods are documented in detail using the 
\noun on 
Matlab
\noun default 
 online help system.
\layout Section

Installation
\begin_inset LatexCommand \label{sec:Installation}

\end_inset 


\layout Standard

Currently the main software classes are available under the 
\family typewriter 
/Lab/matlab/classes/djlab
\family default 
 directory at the Jaeger Lab in Emory University.
 The 
\family typewriter 
djlab
\family default 
 directory is an alias to the latest version, while older versions are kept
 in directories named like 
\family typewriter 
djlab_v0.5b
\family default 
.
 The 
\family typewriter 
README
\family default 
 file under the last version directory illustrates the differences between
 versions.
 
\layout Standard

The classes depend on a number of other utilities from the following directories
: 
\family typewriter 
/Lab/matlab/cengiz
\family default 
 and 
\family typewriter 
/Lab/matlab/alfonso/alftoolbox
\family default 
.
 These directories, together with the class directory from above, need to
 be in your 
\noun on 
Matlab
\noun default 
 search path.
 You can use the 
\family typewriter 
addpath
\family default 
 command to add them interactively, or you can simply put the commands in
 a startup script (e.g., 
\family typewriter 
~/matlab/startup.m
\family default 
).
 An example for this startup script would be as follows:
\layout LyX-Code

%--- startup.m for matlab
\layout LyX-Code

addpath 
\family typewriter 
/Lab/matlab/alfonso/alftoolbox
\layout LyX-Code

addpath 
\family typewriter 
/Lab/matlab/
\family default 
cengiz
\layout LyX-Code

addpath 
\family typewriter 
/Lab/matlab/classes/djlab
\layout LyX-Code

%--- end startup.m
\layout Section

The Main Class Hierarchies
\begin_inset LatexCommand \label{sec:Class-hierarchies}

\end_inset 


\layout Standard


\begin_inset Float figure
wide false
collapsed false

\layout Standard
\align center 

\begin_inset Graphics
	filename db-overview
	width 100text%

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{figcap:Database-overview}

\end_inset 

Schematic overview of the database software.
\end_inset 

The general scheme of how this software can be used is described in Figure
 
\begin_inset LatexCommand \ref{figcap:Database-overview}

\end_inset 

.
 In the figure, flow starts from the dataset object on the top left.
 The raw data is loaded using information in the dataset, and measures are
 calculated to be entered into the matrix of the database object on the
 top right.
 The arrows going to bottom objects and corresponding plots show the types
 of possible analyses that can be done on the database object.
 The red arrow is a speacial analysis for searching and matching rows between
 different databases.
 This time, the match is done by taking a row from a physiology database
 and finding best matching model neurons in a simulation database.
 Subsequent sections describe the entities in the figure.
\layout Subsection

Databases hold all the information
\layout Standard


\begin_inset Float figure
wide false
collapsed true

\layout Standard
\align center 

\begin_inset Graphics
	filename /Lab/cengiz/work/djlab_matlab/doc/DB-classes
	height 100text%
	rotateAngle 90

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{figcap:Database-class-hierarchy}

\end_inset 

Database class hierarchy.
\end_inset 

The database object is at the center of this software package as can be
 seen from the schema in Figure 
\begin_inset LatexCommand \ref{figcap:Database-overview}

\end_inset 

.
 A database object can be created from any of the classes in the class hierarchy
 in Figure 
\begin_inset LatexCommand \ref{figcap:Database-class-hierarchy}

\end_inset 

.
 The top-level database class is 
\family typewriter 
tests_db
\family default 
 which contains a two-dimensional matrix of real-number data with associated
 information.
 The associated information consist of meta-data such as column labels (e.g.,
 measure names), a dataset label, and data properties (e.g., time resolution).
\layout Standard

The preferred way to create a database object is using a dataset object.
 This maintains a connection from the elements of the database (e.g., neurons)
 to raw data.
 Thus, raw data associated with database contents can be visualized during
 analysis.
\layout Standard

Some specialized subclasses of 
\family typewriter 
tests_db
\family default 
 are as follows:
\begin_inset Note
collapsed true

\layout Standard

put links to reference section?
\end_inset 


\layout Description


\family typewriter 
params_tests_db 
\family default 
The first 
\family typewriter 
num_params
\family default 
 columns are reserved for parameters that were changed between different
 rows.
 It contains methods that treat these columns specially.
\layout Description


\family typewriter 
tests_3D_db 
\family default 
Contains a three-dimensional data matrix that has additional pages of informatio
n.
 This is useful when one wants to look at how everything changes with one
 other parameter.
 The natural way to obtain a 3D database is using the 
\family typewriter 
invarParam
\family default 
 method of 
\family typewriter 
params_tests_db
\family default 
.
\layout Description


\family typewriter 
stats_db
\family default 
 Contains few rows that describe the statistics of another database.
 It can contain the mean and standard deviation or error, or in some cases,
 the minimal and maximal values of columns in a database.
 It contains special plotting functions.
 Some methods access this object to make use of the statistics.
\layout Description


\family typewriter 
ranked_db
\family default 
 Contains distances that resulted from a comparison of a database with a
 criterion.
 Contains methods to generate reports from information about matching neurons.
\layout Description


\family typewriter 
spikes_db
\family default 
 Contains results from individual spike shapes in a period of a 
\family typewriter 
trace
\family default 
 object.
 Obtained using the 
\family typewriter 
trace/analyzeSpikesInPeriod
\family default 
 method.
\layout Description


\family typewriter 
histogram_db
\family default 
 Each row corresponds to a histogram bin.
 Contains plotting methods.
\layout Description


\family typewriter 
corrcoefs_db
\family default 
 Each row corresponds to a correlation coefficient.
 Contains plotting methods.
\layout Description


\family typewriter 
cluster_db
\family default 
 Each row corresponds to a cluster centroid.
 Contains plotting methods.
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
clearpage
\end_inset 


\layout Subsection

Datasets create the databases
\layout Standard

The dataset object is responsible for creating the database objects as seen
 from the schema in Figure 
\begin_inset LatexCommand \ref{figcap:Database-overview}

\end_inset 

.
 It defines where the raw data is stored and what parameters are used to
 load and analyze it.
 It knows that raw data has parameters associated which individual raw data
 traces and how and which measures will be generated.
 This information is used to automatically generate a database from the
 dataset.
 It also allows reaching back the raw data from rows of an analyzed database.
 
\layout Standard


\begin_inset Float figure
wide false
collapsed true

\layout Standard
\align center 

\begin_inset Graphics
	filename /Lab/cengiz/work/djlab_matlab/doc/Dataset-classes
	width 90theight%
	rotateAngle 90

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{figcap:Dataset-class-hierarchy}

\end_inset 

Dataset class hierarchy.
\end_inset 

Figure 
\begin_inset LatexCommand \ref{figcap:Dataset-class-hierarchy}

\end_inset 

 shows the hierarchy for the dataset classes.
 The top-level dataset class is 
\family typewriter 
params_tests_dataset
\family default 
 which is an incomplete class.
 That is, this class defines general utilities that can work for a variety
 of dataset subclasses, but one cannot make a object from the 
\family typewriter 
params_tests_dataset
\family default 
 class directly.
 Instead, one of its subclasses must be chosen and used.
 Some of these specialized subclasses are as follows:
\layout Description


\family typewriter 
params_tests_fileset
\family default 
 This class assumes each raw data item resides in a file and all of these
 files are in the same directory.
 The parameter names and values are obtained from each file name itself.
 This class is mostly useful for simulation filesets.
\layout Description


\family typewriter 
params_cip_trace_fileset
\family default 
 This is a subclass of 
\family typewriter 
params_tests_fileset
\family default 
, therefore it inherits the notion of one file per data item.
 The files must conform to the current-pulse injection experiments and have
 a starting time and duration for the pulses.
 The pulse magnitude is read from the 
\family typewriter 
pAcip
\family default 
 parameter.
 This class is mostly useful for simulation filesets.
\layout Description


\family typewriter 
physiol_cip_traceset
\family default 
 This is a subclass of 
\family typewriter 
params_tests_dataset
\family default 
.
 It is designed to load a set of physiology traces from a single file generated
 by the PCDX stimulation and acquisition software.
 
\layout Description


\family typewriter 
physiol_cip_traceset_fileset
\family default 
 This is a subclass of 
\family typewriter 
params_tests_dataset
\family default 
.
 It is designed to load traces from multiple PCDX data files.
 It uses the 
\family typewriter 
physiol_cip_traceset
\family default 
 class for this purpose.
 
\layout Description


\family typewriter 
cip_traces_dataset,\SpecialChar ~
cip_traceset,\SpecialChar ~
cip_traceset_dataset
\family default 
 These are obsolete classes that allow loading physiology traces from older
 
\noun on 
Matlab
\noun default 
 formatted objects.
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
clearpage
\end_inset 


\layout Subsection

Data wrappers hold the raw data
\layout Standard

Data wrappers are classes designed to hold data of sorts.
 These can be raw data, or they can be the byproduct of an analysis routine
 that operates on raw data.
 In the overall schema of Figure 
\begin_inset LatexCommand \ref{figcap:Database-overview}

\end_inset 

, the raw traces obtained from the dataset object are examples of data wrapper
 objects.
 An example of a class that holds raw data would be the 
\family typewriter 
trace
\family default 
 class, which holds raw traces of entities such as voltage or current.
 The 
\family typewriter 
spikes
\family default 
 object, however, contains the spike times obtained by analyzing a 
\family typewriter 
trace
\family default 
 object.
\layout Standard

A data wrapper class does more than just holding the data.
 It defines a set of operations in terms of method functions that can work
 on the data held by the class.
 As a rule of thumb, if one needs to add some new functionality into the
 software, it should be added as a method into the class which holds the
 data on which the method operates.
\layout Standard


\begin_inset Float figure
wide false
collapsed true

\layout Standard
\align center 

\begin_inset Graphics
	filename /Lab/cengiz/work/djlab_matlab/doc/data-wrapper-diagram
	width 90theight%
	rotateAngle 90

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{figcap:Datawrapper-class-hierarchy}

\end_inset 

Data wrapper class hierarchy.
\end_inset 

Figure 
\begin_inset LatexCommand \ref{figcap:Datawrapper-class-hierarchy}

\end_inset 

 shows the hierarchy for the data wrapper classes.
 Some of these classes are as follows:
\layout Description


\family typewriter 
trace
\family default 
 Generic object that holds a vector of data that changes over time.
 It has a time resolution and y-axis resolution.
 Contains many analysis routines.
\layout Description


\family typewriter 
cip_trace
\family default 
 A subclass of 
\family typewriter 
trace
\family default 
 class which defines a pulse period.
 It contains period-specific analyses.
\layout Description


\family typewriter 
spike_shape
\family default 
 A subclass of 
\family typewriter 
trace
\family default 
 that holds the shape of a single spike.
 It contains spike shape measurements.
\layout Description


\family typewriter 
spikes
\family default 
 A generic class to hold the event times for spikes.
 It contains routined for making measurements based on spike times, such
 as rate and ISI calculations.
\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
clearpage
\end_inset 


\layout Subsection

Profiles hold results obtained from data
\layout Standard


\begin_inset Float figure
wide false
collapsed true

\layout Standard
\align center 

\begin_inset Graphics
	filename /Lab/cengiz/work/djlab_matlab/doc/Profiles
	width 90theight%
	rotateAngle 90

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{figcap:Profile-class-hierarchy}

\end_inset 

Profile class hierarchy.
\end_inset 


\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
clearpage
\end_inset 


\layout Subsection

Plots provide easy visualization
\layout Standard


\begin_inset Float figure
wide false
collapsed false

\layout Standard
\align center 

\begin_inset Graphics
	filename /Lab/cengiz/work/djlab_matlab/doc/plots
	width 90theight%
	rotateAngle 90

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{figcap:Plot-class-hierarchy}

\end_inset 

Plots class hierarchy.
\end_inset 


\layout Standard


\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
clearpage
\end_inset 


\layout Section

Recipes for Routine Tasks
\begin_inset LatexCommand \label{sec:Recipes}

\end_inset 


\layout Subsection

Loading a database
\layout Standard

To load a database, first a dataset object need to be created that point
 to the data sources.
 There are different dataset classes that allow using different data sources.
 For instance, physiology and simulation data require different operations.
 In physiology data, one may want to record information about the treatments
 and other conditions, whereas in simulations one may want to keep track
 of changing parameters.
 
\layout Standard

Once the dataset object is obtained, the database object can be created
 with 
\layout LyX-Code

>> mydb = params_tests_db(dataset)
\layout Standard

which initiates the loading of files.
 This operation is the same no matter what type of dataset or fileset object
 is used.
 You may want to issue the following commands to reduce the verbosity of
 output during this long process:
\layout LyX-Code

>> warning off verbose
\layout LyX-Code

>> warning off backtrace
\layout LyX-Code

>> warning off calcInitVm:info
\layout Subsubsection

Creating a dataset for physiology data
\begin_inset LatexCommand \label{sub:loading-phys}

\end_inset 


\layout Standard

Physiology data can be obtained from multiple sources.
 
\layout Paragraph

Loading data by specifying tracesets in a text file
\layout Standard

The preferred way to load physiology traces is to first create a text file
 where each line specifies traces to load from a single data source (e.g.,
 a PCDX file).
 The format of this text file is explained in the help of the 
\family typewriter 
physiol_cip_traceset_fileset
\family default 
 class.
 The physiology fileset can be created from the text file with a command
 such as follows:
\layout LyX-Code

>> phys_fileset = 
\layout LyX-Code

     physiol_cip_traceset_fileset('cell_traces.txt', 1e-4, 1e-3,
\layout LyX-Code

                                  struct('profile_class_name', 
\layout LyX-Code

                                         'getProfileAllSpikes',
\layout LyX-Code

                                         'offset_y', -9,
\layout LyX-Code

                                         'cip_list', 
\layout LyX-Code

                                         [-200 -100:20:100 200 300]))
\layout Standard

This command reads the 
\family typewriter 
cell_traces.txt
\family default 
 file and records the tracesets to read from each file.
 The structure passed indicates to use the 
\family typewriter 
getProfileAllSpikes
\family default 
 method to calculate the measurements on the traces.
\layout Standard

The fileset can then be used to generate the database, as shown above, using
 its 
\family typewriter 
params_tests_db
\family default 
 method.
 The fileset object holds within, a separate 
\family typewriter 
physiol_cip_traceset
\family default 
 object for each line in the text file.
 
\layout Standard

The 
\family typewriter 
cip_list
\family default 
 optional parameter must be used with caution.
 To determine actual CIP-levels, the current channel of the trace is analyzed.
 
\family typewriter 
cip_list
\family default 
 entries are used to discretize the noisy current channel.
 Current levels will coerce to the nearest entry from 
\family typewriter 
cip_list
\family default 
.
 In the above example, all current levels below 
\begin_inset Formula $-200$
\end_inset 

\SpecialChar ~
pA will be assumed to be 
\begin_inset Formula $-200$
\end_inset 

\SpecialChar ~
pA.
 The default 
\family typewriter 
cip_list
\family default 
 resides in the 
\family typewriter 
physiol_cip_traceset/CIPform
\family default 
 method.
\layout Paragraph

Loading data from existing 
\family typewriter 
cip_traces
\family default 
 objects
\layout Standard

The now obsolete 
\family typewriter 
cip_traces
\family default 
 Matlab objects have been used to hold some earlier physiological data.
 Each object holds a set of traces with varying CIP levels applied to the
 cell.
 The following command creates a dataset object from a cell array 
\family typewriter 
ct_list
\family default 
 of 
\family typewriter 
cip_traces
\family default 
 objects by choosing only the traces with 
\begin_inset Formula $100$
\end_inset 

\SpecialChar ~
pA and 
\begin_inset Formula $-100$
\end_inset 

\SpecialChar ~
pA CIP levels
\layout LyX-Code

>> phys_dataset = 
\layout LyX-Code

  cip_traceset_dataset(ct_list, [100, -100], 1e-3, 
\layout LyX-Code

                       'dataset gpd 0411-21', 
\layout LyX-Code

                       struct('offsetPotential', -9)
\layout Subsubsection

Creating a dataset for simulation data
\layout Standard

First a dataset or a fileset must be created.
 An example to load 
\noun on 
Genesis
\noun default 
 
\family typewriter 
.bin
\family default 
 files would be
\layout LyX-Code

>> fileset = 
\layout LyX-Code

  params_cip_trace_fileset('/home/cengiz/data/*.bin', 
\layout LyX-Code

                           1e-4, 1e-3, 
\layout LyX-Code

                           20001, 10000, 
\layout LyX-Code

                           'sim dataset gpsc0501', 
\layout LyX-Code

                           struct('trace_time_start', 10001, 
\layout LyX-Code

                                  'type', 'sim',  
\layout LyX-Code

                                  'scale_y', 1e3))
\layout Standard

The explanation of arguments can be obtained by issuing a 
\layout LyX-Code

>> help params_cip_trace_fileset
\layout Standard

in 
\noun on 
Matlab
\noun default 
.
\begin_inset Note
collapsed true

\layout Standard

Point to reference manual at the end of this manual.
 You know, the automatically generated one.
\end_inset 

 In this example, all 
\noun on 
Genesis
\noun default 
 files were created with the same characteristics: 
\begin_inset Formula $\mathrm{d}t=10^{-4}$
\end_inset 

, 
\begin_inset Formula $\mathrm{d}V=10^{-3}$
\end_inset 

, pulse during samples 
\begin_inset Formula $[20001,30000]$
\end_inset 

.
 Optional properties (the last argument) indicates that the first 
\begin_inset Formula $10000$
\end_inset 

 samples should be discarded and that the data should be prescaled to yield
 the 
\begin_inset Formula $\mathrm{d}V$
\end_inset 

 indicated.
 Note that, using an absolute path to refer to data files ensures that they
 can be reached from different directories after the fileset object is saved.
 
\layout Paragraph

Loading heterogeneous set of simulation files
\layout Standard

Sometimes not all data files in a simulation set would have the same length,
 or CIP start time.
 The brute-force simulation set is such an example, where the spontaneous
 trace and different CIP level traces are in different files.
 I have a special superclass that contains multiple fileset objects to automatic
ally handle this kind of data.
 It resides not in the general distribution directory, but in my personal
 directory 
\family typewriter 
/Lab/matlab/classes/cengiz
\family default 
.
 This class is an example of how to create composite fileset objects.
 An instance of this class can be created with:
\layout LyX-Code

>> m_filesetall = 
\layout LyX-Code

     multi_fileset_gpsim_cns2005('.../data', '.../paramRanges.txt', 
\layout LyX-Code

                                 '.../all_0.par', 'sim db gpsc0502')
\layout Standard

which will find all the files in the given directory and put them in separate
 pre-defined fileset objects according to their 
\family typewriter 
_pAcip_
\family default 
 suffixes.
 Parameter range definition and value files are used to read parameter values
 for each simulation.
 A single database object can be loaded using the 
\family typewriter 
params_tests_db
\family default 
 method on the 
\family typewriter 
m_filesetall
\family default 
 object above.
 The help on this method explains how to load only certain filesets at a
 time.
 This helps to load different filesets in parallel, since databases can
 be concatanated easily afterwards.
\layout Subsection

Finding constrained subsets in a database
\layout Standard

Once a database with more-than-sufficient number of measures is available,
 subsets of this database can be extracted easily for other tasks.
 New databases can be formed by filtering rows, columns or pages of an existing
 database.
 For choosing any of these dimensions, the user can specify an array of
 indices, or a logical array.
 For instance, 
\layout LyX-Code

>> db2 = db1(1:10, :);
\layout Standard

creates a database object 
\family typewriter 
db2
\family default 
 by the first ten rows of 
\family typewriter 
db1
\family default 
 and all its columns.
 For three-dimensional databases, a third parameter can be specified, as
 in 
\layout LyX-Code

>> db2 = db1(1:10, :, [1 3]);
\layout Standard

which will take only the first and third page from 
\family typewriter 
db1
\family default 
.
\layout Standard

For measures, columns can also be specified as a single string value, or
 a cell array of strings, as in 
\layout LyX-Code

>> db2 = db1(1:10, 'pAcip');
\layout Standard

which chooses only the 
\family typewriter 
pAcip
\family default 
 column of the first 10 rows of 
\family typewriter 
db1
\family default 
 or 
\layout LyX-Code

>> db2 = db1(1:10, {'pAcip', 'IniSpontSpikeRate'});
\layout Standard

which chooses two columns.
 Finally, composite queries can be formed when cell arrays are used for
 addressing:
\layout LyX-Code

>> db2 = db1(1:10, {1:10, 'IniSpontSpikeRate', 234});
\layout Standard

which will select the first ten measures, the spontaneous spike rate, and
 the measure number 234.
\layout Standard

Rows of the database signify neurons or simulation runs.
 Therefore it is important to find subset of neurons that match a certain
 criteria.
 This can be done specifying a list of rows that is the result of a logical
 operation.
 A logical operation finds rows that satisfy constraints on a single parameter
 or measure of a database.
 For instance, 
\layout LyX-Code

>> rows = db1(:, 'IniSpontSpikeRate') > 10;
\layout Standard

gives a logical array that contains a 
\family typewriter 
true
\family default 
 value for all rows in 
\family typewriter 
db1
\family default 
 that has spontaneous firing faster than 10 Hz.
 If this is used as the row specifier in a subset operation, a new database
 with only these neurons can be obtained by 
\layout LyX-Code

>> db2 = db1(rows, :);
\layout Standard

If we want more constrains it is straightforward to use any logical operation
 such as AND (
\family typewriter 
&
\family default 
), OR (
\family typewriter 
|
\family default 
) and NOT(
\family typewriter 
~
\family default 
) on these logical arrays such as 
\layout LyX-Code

>> db2 = db1((rows | rows2) & rows3, :);
\layout Standard

which says choose all rows from 
\family typewriter 
db1
\family default 
 where either the tests 
\family typewriter 
rows
\family default 
 and 
\family typewriter 
rows2
\family default 
 are satisfied and while 
\family typewriter 
rows3
\family default 
 is always satisfied.
 All these operations can be specified in-place such as in 
\layout LyX-Code

>> db2 = db1(db1(:, 'IniSpontSpikeRate') > 10 & 
\layout LyX-Code

             db1(:, 'IniSpontSpikeRate') <= 20, :);
\layout Standard

which will create a database of neurons that spontaneously fire between
 10--20 Hz.
\layout Subsubsection

Complex Queries
\layout Standard

Complex queries can be constructed using results of queries in nested fashion.
 The following example shows an example of finding all neurons that match
 any of the neurons in another database and then find the ones that match
 certain criteria:
\layout LyX-Code

>> sub_phys_es2 = phys_joined_db(phys_joined_db(:, 'NeuronId') == es2(:,
 'NeuronId'), :); 
\layout LyX-Code

>> displayRows(sub_phys_es2(sub_phys_es2(:, 'Apamin') > 0, 'NeuronId'))
\layout Standard

Here, the first query returns all rows that match the 
\family typewriter 
NeuronId
\family default 
s from the 
\family typewriter 
es3
\family default 
 database.
 The inner term in the second query finds among these neurons the ones for
 which apamin blocker data is present.
 The final enclosing block uses these rows to get a subset of the 
\family typewriter 
phys_joined_db
\family default 
 with only the 
\family typewriter 
NeuronId
\family default 
 column.
 This type query has equivalent computational power to using nested SELECT
 statements in the SQL language.
\layout Subsection

Sorting the database according to a measure
\begin_inset LatexCommand \label{sub:Sorting-the-database}

\end_inset 


\layout Standard

First, all rows where the desired measure value is 
\family typewriter 
NaN
\family default 
 should be eliminated:
\layout LyX-Code

>> ampDecayTau_nonNaN_db = 
\layout LyX-Code

     dball(~isnan(dball(:, 'PulseSpikeAmpDecayTau')), :)
\layout Standard

This finds all rows in 
\family typewriter 
dball
\family default 
 that the 
\family typewriter 
PulseSpikeAmpDecayTau
\family default 
 measure is not 
\family typewriter 
NaN
\family default 
 and creates a new DB object 
\family typewriter 
ampDecayTau_nonNaN_db
\family default 
, which includes these rows with all measures from 
\family typewriter 
dball
\family default 
.
 Notice that the newly created DB contains less rows than the original DB.
 The number of rows in the new DB can be obtained by just typing the name
 of the DB and pressing enter at the 
\noun on 
Matlab
\noun default 
 prompt.
\layout Standard

Then, one can sort the new database using:
\layout LyX-Code

>> ampDecayTau_sorted_db = sortrows(ampDecayTau_nonNaN_db, 
\layout LyX-Code

                                    'PulseSpikeAmpDecayTau') 
\layout Standard

This will create DB which is sorted with increasing values of the 
\family typewriter 
PulseSpikeAmpDecayTau
\family default 
 measure.
 Displaying the first few rows gives lowest values:
\layout LyX-Code

>> displayRows(ampDecayTau_sorted_db, 1:3)
\layout LyX-Code

ans = 
\layout LyX-Code

    'NaF'                    [      1000]    [     250]    [     250]
\layout LyX-Code

    'NaP'                    [    0.5000]    [  0.5000]    [  2.5000]
\layout LyX-Code

    'Kv3'                    [        60]    [      15]    [      30]
\layout LyX-Code

    'Kv2'                    [         9]    [       3]    [       3]
\layout LyX-Code

    'Kv4f'                   [         5]    [       1]    [      25]
\layout LyX-Code

    'KCNQ'                   [    0.1000]    [  0.0100]    [  0.1000]
\layout LyX-Code

    'SK'                     [    8.5000]    [      34]    [  8.5000]
\layout LyX-Code

    'CaHVA'                  [        10]    [  0.1000]    [      10]
\layout LyX-Code

    'HCN'                    [        30]    [  0.3000]    [      30]
\layout LyX-Code

    'pAcip'                  [       100]    [     100]    [     100]
\layout LyX-Code

    'IniSpontISICV'          [3.9448e-04]    [  0.0051]    [  0.0452]
\layout LyX-Code

    'IniSpontPotAvg'         [  -64.9161]    [-52.6859]    [-41.5876]
\layout LyX-Code

    'IniSpontSpikeRate'      [   14.0014]    [ 18.0018]    [ 81.0081]
\layout LyX-Code

    'PulseISICV'             [    0.0226]    [       0]    [  0.0366]
\layout LyX-Code

    'PulseIni100msISICV'     [    0.0541]    [       0]    [  0.0814]
\layout LyX-Code

              [1x27 char]    [   28.8953]    [       0]    [ 88.9086]
\layout LyX-Code

              [1x27 char]    [   26.6785]    [       0]    [ 86.7052]
\layout LyX-Code

              [1x22 char]    [        30]    [      20]    [     100]
\layout LyX-Code

              [1x25 char]    [   29.4118]    [166.6667]    [ 96.0512]
\layout LyX-Code

    'PulsePotAvg'            [  -61.0044]    [-32.7775]    [-34.1518]
\layout LyX-Code

    'PulsePotMin'            [       NaN]    [     NaN]    [     NaN]
\layout LyX-Code

    'PulsePotSag'            [       NaN]    [     NaN]    [     NaN]
\layout LyX-Code

    'PulseSFA'               [    1.1254]    [     NaN]    [  1.3571]
\layout LyX-Code

    'PulseSpikeAmpDecayDelta'[    4.2764]    [  9.2041]    [ 17.8389]
\layout LyX-Code

    'PulseSpikeAmpDecayTau'  [    0.2000]    [  0.2000]    [  0.3000]
\layout LyX-Code

    'PulseSpikeRate'         [   28.0028]    [  2.0002]    [ 89.0089]
\layout LyX-Code

...
\layout Standard

Displaying the last few rows gives the highest values:
\layout LyX-Code

>> displayRows(ampDecayTau_sorted_db, 13879:13881)
\layout LyX-Code

ans = 
\layout LyX-Code

    'NaF'                    [     250]    [     250]    [      1000]
\layout LyX-Code

    'NaP'                    [  2.5000]    [  2.5000]    [    2.5000]
\layout LyX-Code

    'Kv3'                    [      15]    [      15]    [        60]
\layout LyX-Code

    'Kv2'                    [       3]    [       3]    [         9]
\layout LyX-Code

    'Kv4f'                   [       5]    [       5]    [        25]
\layout LyX-Code

    'KCNQ'                   [  0.1000]    [  0.1000]    [    0.0100]
\layout LyX-Code

    'SK'                     [  8.5000]    [  8.5000]    [        17]
\layout LyX-Code

    'CaHVA'                  [      10]    [      10]    [        10]
\layout LyX-Code

    'HCN'                    [      30]    [       3]    [        30]
\layout LyX-Code

    'pAcip'                  [    -100]    [    -100]    [       100]
\layout LyX-Code

    'IniSpontISICV'          [  0.0027]    [  0.0027]    [9.1376e-04]
\layout LyX-Code

    'IniSpontPotAvg'         [-28.5685]    [-28.5687]    [  -67.7567]
\layout LyX-Code

    'IniSpontSpikeRate'      [ 69.0069]    [ 69.0069]    [   14.0014]
\layout LyX-Code

    'PulseISICV'             [  0.0046]    [  0.0046]    [    0.0091]
\layout LyX-Code

    'PulseIni100msISICV'     [  0.0080]    [  0.0080]    [         0]
\layout LyX-Code

              [1x27 char]    [ 71.1269]    [ 71.1269]    [   24.4499]
\layout LyX-Code

              [1x27 char]    [ 71.1427]    [ 71.1427]    [   26.6785]
\layout LyX-Code

              [1x22 char]    [      80]    [      80]    [        20]
\layout LyX-Code

              [1x25 char]    [ 70.6357]    [ 70.6357]    [   25.4453]
\layout LyX-Code

    'PulsePotAvg'            [-30.1705]    [-30.1718]    [  -65.2721]
\layout LyX-Code

    'PulsePotMin'            [     NaN]    [     NaN]    [       NaN]
\layout LyX-Code

    'PulsePotSag'            [     NaN]    [     NaN]    [       NaN]
\layout LyX-Code

    'PulseSFA'               [  0.9792]    [  0.9792]    [    1.0407]
\layout LyX-Code

    'PulseSpikeAmpDecayDelta'[ -1.2791]    [ -1.2868]    [    1.2201]
\layout LyX-Code

    'PulseSpikeAmpDecayTau'  [999.6000]    [999.6000]    [      1000]
\layout LyX-Code

    'PulseSpikeRate'         [ 72.0072]    [ 72.0072]    [   25.0025]
\layout LyX-Code

...
\layout Subsection

Preprocessing a raw (physiology) database by elimination and averaging 
\begin_inset OptArg
collapsed true

\layout Standard

Preprocessing a raw (physiology) database
\end_inset 


\layout Standard

Mostly, raw physiology databases are subject to redundancies and unwanted
 recordings.
 We usually apply the following steps before we start analyzing a raw physiology
 database.
 Similar steps may be employed for simulation databases, too.
\layout Subsubsection

Limiting range of bias currents
\layout Standard

Recordings with high bias current are undesirable.
 We commonly filter-out high bias currents with:
\layout LyX-Code

>> db_bias_small = 
\layout LyX-Code

     phys_dball(phys_dball(:, 'pAbias') > -30 & 
\layout LyX-Code

                phys_dball(:, 'pAbias') < 30, :)
\layout Standard

which will limit the bias current, 
\begin_inset Formula $i_{b}$
\end_inset 

, to 
\begin_inset Formula $-30\,\mathrm{pA}<i_{b}<30\,\mathrm{pA}$
\end_inset 

.
 
\layout Subsubsection

Choosing few current levels
\layout Standard

To get a profile for a neuron, usually both hyperpolarizing and depolarizing
 CIP-levels need to be included.
 Moreover, to capture the spiking frequency vs.
 current response of the neuron, multiple depolarizing CIP-level information
 may need to be included.
 
\layout Standard

There are two counterparts to selecting which CIP-levels to include in a
 DB.
 First, one can select what CIP-levels are available in the raw data and
 what discretization levels should be used while loading the database.
 This is done with the 
\family typewriter 
cip_list
\family default 
 optional parameter described in Section 
\begin_inset LatexCommand \ref{sub:loading-phys}

\end_inset 

.
 GP recordings prior to mid-2005 have current channel data which are too
 noisy to be quantized to levels of 10 pA.
 Instead, at least a step size of 20 pA needs to be used.
 Later recordings have both better recordings, and feature 20 pA steps in
 the experimental protocol anyway.
 
\layout Standard

Second, after the database is loaded, one can filter-out unwanted CIP-level
 traces:
\layout LyX-Code

>> phys_dball_limitedcip = 
\layout LyX-Code

     phys_dball_big(phys_dball_big(:, 'pAcip') == -100 | 
\layout LyX-Code

                    phys_dball_big(:, 'pAcip') == 0 | 
\layout LyX-Code

                    phys_dball_big(:, 'pAcip') == 50 | 
\layout LyX-Code

                    phys_dball_big(:, 'pAcip') == 100 | 
\layout LyX-Code

                    phys_dball_big(:, 'pAcip') == 200, :)
\layout Standard

This operation can be simplified to take advantage of complex query form:
\layout LyX-Code

>> phys_dball_limitedcip = 
\layout LyX-Code

     phys_dball_big(phys_dball_big(:, 'pAcip') == [-100; 0; 50; 100; 200])
 
\layout Standard

which will choose rows with current levels matching any of the given values.
\layout Subsubsection

Adding new columns calculated from existing measures
\layout Standard

Some measures can be deduced from measures collected from raw data.
 These do not need to be calculated at time of loading the raw data, but
 rather can be added to the database later.
 Some measures must be added later because they may be composed of measurements
 from multiple traces or averages.
 Here is an example for adding a new measure:
\layout LyX-Code

>> phys_db_limitedcip_addedcols = 
\layout LyX-Code

     addColumn(phys_db_limitedcip, 'PulsePotSagDivMin', 
\layout LyX-Code

               phys_db_limitedcip(:, 'PulsePotSag').data ./ 
\layout LyX-Code

               phys_db_limitedcip(:, 'PulsePotMin').data)
\layout Subsubsection

Averaging multiple traces of same neuron with same CIP-level and (pharmacologica
l) parameters 
\begin_inset OptArg
collapsed true

\layout Standard

Averaging multiple traces of same neuron
\end_inset 


\layout Standard

In making a one-row-per-CIP-level database, it is essential to include all
 available information from the raw database.
 Especially in physiology datasets, there may be multiple traces of a neuron
 where the same CIP-level and the same pharmacological conditions were applied.
 These rows can be averaged to obtain a single row for each CIP-level of
 a neuron.
\layout Standard

Before doing this, the parameters of the raw database should only include
 parameters that uniquely distinguish neurons.
 The averaging operation tries to find each distinct set of parameters and
 then averages all rows that has this combination.
 For example, the 
\family typewriter 
NeuronId
\family default 
 and 
\family typewriter 
pAcip
\family default 
 parameters need to be distinct.
 However, the 
\family typewriter 
pAbias
\family default 
 parameter does not need to be distinct for each neuron.
 The non-unique parameters need to be filtered-out before the averaging
 process.
 The following shows all the parameters of a raw physiology database:
\layout LyX-Code

>> phys_db
\layout LyX-Code

params_tests_db, tracesets from .../cip_traces_all_axoclamp.txt
\layout LyX-Code

ans = 
\layout LyX-Code

    num_params: 16
\layout LyX-Code

         props: [0x0 struct]
\layout LyX-Code

      tests_db: [1x1 tests_db]
\layout LyX-Code

Optional properties of params_tests_db:
\layout LyX-Code

ans = 
\layout LyX-Code

0x0 struct array with no fields.
\layout LyX-Code

tests_db, tracesets from .../cip_traces_all_axoclamp.txt
\layout LyX-Code

1527 rows in database with 182 columns, and 1 pages.
\layout LyX-Code

Column names:
\layout LyX-Code

    [  1]    'pulseOn'                    
\layout LyX-Code

    [  2]    'pulseOff'                   
\layout LyX-Code

    [  3]    'traceEnd'                   
\layout LyX-Code

    [  4]    'pAcip'                      
\layout LyX-Code

    [  5]    'pAbias'                     
\layout LyX-Code

    [  6]    'Cadmium'                    
\layout LyX-Code

    [  7]    'PicroTx'                    
\layout LyX-Code

    [  8]    'Apamin'                     
\layout LyX-Code

    [  9]    'Glycine'                    
\layout LyX-Code

    [ 10]    'KynAcid'                    
\layout LyX-Code

    [ 11]    'TTX'                        
\layout LyX-Code

    [ 12]    'XE991'                      
\layout LyX-Code

    [ 13]    'drug_4AP'                   
\layout LyX-Code

    [ 14]    'EBIO'                       
\layout LyX-Code

    [ 15]    'NeuronId'                   
\layout LyX-Code

    [ 16]    'TracesetIndex'            
\layout LyX-Code

...
\layout Standard

One can choose which parameters need to be distinct for each row by specifying
 as the second argument in the call to the 
\family typewriter 
meanDuplicateRows
\family default 
 method, whereas the third argument specifies the measures to be averaged:
\layout LyX-Code

>> phys_mean_db = meanDuplicateRows(phys_db, [4 6:15], [17:161])
\layout LyX-Code

params_tests_db, averaged tracesets from .../cip_traces_all.txt
\layout LyX-Code

ans = 
\layout LyX-Code

    num_params: 13
\layout LyX-Code

         props: [0x0 struct]
\layout LyX-Code

      tests_db: [1x1 tests_db]
\layout LyX-Code

Optional properties of params_tests_db:
\layout LyX-Code

ans = 
\layout LyX-Code

0x0 struct array with no fields.
\layout LyX-Code

tests_db, averaged tracesets from .../cip_traces_all.txt
\layout LyX-Code

690 rows in database with 158 columns, and 1 pages.
\layout LyX-Code

Column names:
\layout LyX-Code

    [  1]    'pAcip'                      
\layout LyX-Code

    [  2]    'Cadmium'                    
\layout LyX-Code

    [  3]    'PicroTx'                    
\layout LyX-Code

    [  4]    'Apamin'                     
\layout LyX-Code

    [  5]    'Glycine'                    
\layout LyX-Code

    [  6]    'KynAcid'                    
\layout LyX-Code

    [  7]    'TTX'                        
\layout LyX-Code

    [  8]    'XE991'                      
\layout LyX-Code

    [  9]    'drug_4AP'                   
\layout LyX-Code

    [ 10]    'EBIO'                       
\layout LyX-Code

    [ 11]    'NeuronId'                   
\layout LyX-Code

    [ 12]    'NumDuplicates'              
\layout LyX-Code

    [ 13]    'RowIndex'                   
\layout LyX-Code

    [ 14]    'IniSpontISICV'    
\layout LyX-Code

...
\layout Standard

This command ignores the pulse time information and the bias current, but
 includes all the pharmacological parameters, in distinguising the unique
 traces.
 It also eliminates some measures, such as the 
\family typewriter 
ItemIndex
\family default 
, from averaging.
\layout Subsection

Making a database by merging multiple rows from another database
\layout Standard

A simple example for making a new database out of multiple rows in an existing
 database is combining multiple traces from the same neuron with different
 current pulse injection (CIP) levels.
 The initial database contains a row for each CIP level with redundant informati
on, such as spontaneous period measurements.
 
\layout Subsubsection

Making a one-row-per-neuron DB from multiple CIP-level rows
\layout Standard

Measures of same cell obtained with multiple CIP-levels can be merged to
 make a single row.
 Note that, different pharmacological conditions applied to one cell must
 be kept in a different rows.
 The following command selects measures from each of the 
\begin_inset Formula $\{-100,0,40,100,200\}$
\end_inset 

 CIP levels to be included in the merged database:
\layout LyX-Code

>> phys_joined_db = 
\layout LyX-Code

     mergeMultipleCIPsInOne(phys_mean_db(:, [1:13 16:180]), 
\layout LyX-Code

                            {'_H100pA', 13 + [5:14 19:24 (119 + spike_tests)
 165],
\layout LyX-Code

                             '_0pA', 13 + [1:4 (27 + spike_tests)], 
\layout LyX-Code

                             '_D40pA', 13 + [5:11 19:24 (73 + spike_tests)
 165],
\layout LyX-Code

                             '_D100pA', 13 + [5:11 14:16 19:24 (73 + spike_tests
) 
\layout LyX-Code

                                              (119 + spike_tests) 165],
 
\layout LyX-Code

                             '_D200pA', 13 + [5:11 19:24 (73 + spike_tests)
 165]},
\layout LyX-Code

                            'RowIndex_D200pA')
\layout Standard

This command operates on the previously averaged database, 
\family typewriter 
phys_mean_db
\family default 
, where each CIP level only occurs once for each distinct pharmacological
 setting for each neuron.
 Note that, we filter-out columns 14 and 15 from the averaged DB while supplying
 the first argument to 
\family typewriter 
mergeMultipleCIPsInOne
\family default 
, which are artifacts of the averaging process and need not be included
 in the merged database.
 The second argument is a cell array of pairs of a suffix string and a correspon
ding list of measures for each of the CIP levels in 
\family typewriter 
phys_mean_db
\family default 
, in increasing order.
 The merged 
\family typewriter 
phys_joined_db
\family default 
 looks like this:
\layout LyX-Code

params_tests_db, averaged tracesets from .../cip_traces_all_axoclamp.txt mult
 CIP
\layout LyX-Code

ans = 
\layout LyX-Code

    num_params: 12
\layout LyX-Code

      tests_db: [1x1 tests_db]
\layout LyX-Code

tests_db, averaged tracesets from .../cip_traces_all_axoclamp.txt mult CIP
\layout LyX-Code

179 rows in database with 258 columns, and 1 pages.
\layout LyX-Code

Column names:
\layout LyX-Code

    [  1]    'Cadmium'                           
\layout LyX-Code

    [  2]    'PicroTx'                           
\layout LyX-Code

    [  3]    'Apamin'                            
\layout LyX-Code

    [  4]    'Glycine'                           
\layout LyX-Code

    [  5]    'KynAcid'                           
\layout LyX-Code

    [  6]    'TTX'                               
\layout LyX-Code

    [  7]    'XE991'                             
\layout LyX-Code

    [  8]    'drug_4AP'                          
\layout LyX-Code

    [  9]    'EBIO'                              
\layout LyX-Code

    [ 10]    'Gabazine'                          
\layout LyX-Code

    [ 11]    'NeuronId'                          
\layout LyX-Code

    [ 12]    'TracesetIndex'                     
\layout LyX-Code

    [ 13]    'PulseISICV_H100pA'                 
\layout LyX-Code

    [ 14]    'PulseIni100msISICV_H100pA'         
\layout LyX-Code

    [ 15]    'PulseIni100msRest1SpikeRate_H100pA'
\layout LyX-Code

    [ 16]    'PulseIni100msRest2SpikeRate_H100pA'
\layout LyX-Code

    [ 17]    'PulseIni100msSpikeRate_H100pA'     
\layout LyX-Code

    [ 18]    'PulseIni100msSpikeRateISI_H100pA'  
\layout LyX-Code

    ...
\layout LyX-Code

    [255]    'PulseSpikeRiseTimeMean_D200pA'     
\layout LyX-Code

    [256]    'PulseSpikeRiseTimeMode_D200pA'     
\layout LyX-Code

    [257]    'PulseSpikeRiseTimeSTD_D200pA'      
\layout LyX-Code

    [258]    'PulseSpontAmpRatio_D200pA'         
\layout Standard

Note how each measure suffix indicate the CIP-level it belongs.
\layout Subsubsection

Making a one-row-per-neuron DB from dual CIP-level rows
\layout Standard

The following statement uses the 
\family typewriter 
params_tests_db/getDualCIPdb
\family default 
 method to merge rows of depolarizing and hyperpolarizing CIP-levels:
\layout LyX-Code

>> sdball = getDualCIPdb(dball, depol_tests, hyper_tests, 
\layout LyX-Code

                         '', 'Hyp100pA')
\layout Standard

Here, the cell array variables 
\family typewriter 
depol_tests
\family default 
 and 
\family typewriter 
hyper_tests
\family default 
 hold the names of measures to be selected from depolarizing CIP and hyperpolari
zing CIP, respectively.
 The last two arguments define the suffixes to be applied to distinguish
 the measures from each CIP.
 The original DB is 
\layout LyX-Code

>> dball
\layout LyX-Code

dball
\layout LyX-Code

params_tests_db, sim dataset gpsc0501
\layout LyX-Code

ans = 
\layout LyX-Code

    num_params: 10
\layout LyX-Code

         props: [0x0 struct]
\layout LyX-Code

      tests_db: [1x1 tests_db]
\layout LyX-Code

Optional properties of params_tests_db:
\layout LyX-Code

ans = 
\layout LyX-Code

0x0 struct array with no fields.
\layout LyX-Code

tests_db, sim dataset gpsc0501
\layout LyX-Code

39366 rows in database with 62 columns, and 1 pages.
\layout LyX-Code

Column names:
\layout LyX-Code

    [ 1]    'NaF'                        
\layout LyX-Code

    [ 2]    'NaP'                        
\layout LyX-Code

    [ 3]    'Kv3'                        
\layout LyX-Code

    [ 4]    'Kv2'                        
\layout LyX-Code

    [ 5]    'Kv4f'                       
\layout LyX-Code

    [ 6]    'KCNQ'                       
\layout LyX-Code

    [ 7]    'SK'                         
\layout LyX-Code

    [ 8]    'CaHVA'                      
\layout LyX-Code

    [ 9]    'HCN'                        
\layout LyX-Code

    [10]    'pAcip'                      
\layout LyX-Code

    [11]    'IniSpontISICV'              
\layout LyX-Code

    [12]    'IniSpontPotAvg'             
\layout LyX-Code

    [13]    'IniSpontSpikeRate'          
\layout LyX-Code

    [14]    'PulseISICV'                 
\layout LyX-Code

    [15]    'PulseIni100msISICV'         
\layout LyX-Code

    [16]    'PulseIni100msRest1SpikeRate'
\layout LyX-Code

    [17]    'PulseIni100msRest2SpikeRate'
\layout LyX-Code

    [18]    'PulseIni100msSpikeRate'     
\layout LyX-Code

    [19]    'PulseIni100msSpikeRateISI'  
\layout LyX-Code

    [20]    'PulsePotAvg'                
\layout LyX-Code

    [21]    'PulsePotMin'                
\layout LyX-Code

    [22]    'PulsePotSag'                
\layout LyX-Code

    [23]    'PulseSFA'                   
\layout LyX-Code

    [24]    'PulseSpikeAmpDecayDelta'    
\layout LyX-Code

    [25]    'PulseSpikeAmpDecayTau'      
\layout LyX-Code

    [26]    'PulseSpikeRate'             
\layout LyX-Code

    [27]    'PulseSpikeRateISI'          
\layout LyX-Code

    [28]    'RecIniSpontPotRatio'        
\layout LyX-Code

    [29]    'RecIniSpontRateRatio'       
\layout LyX-Code

    [30]    'RecSpont1SpikeRate'         
\layout LyX-Code

    [31]    'RecSpont2SpikeRate'         
\layout LyX-Code

    [32]    'RecSpontISICV'              
\layout LyX-Code

    [33]    'RecSpontPotAvg'             
\layout LyX-Code

    [34]    'RecSpontSpikeRate'          
\layout LyX-Code

    [35]    'SpontAmplitude'             
\layout LyX-Code

    [36]    'SpontBaseWidth'             
\layout LyX-Code

    [37]    'SpontDAHPMag'               
\layout LyX-Code

    [38]    'SpontFallTime'              
\layout LyX-Code

    [39]    'SpontHalfVm'                
\layout LyX-Code

    [40]    'SpontHalfWidth'             
\layout LyX-Code

    [41]    'SpontInitTime'              
\layout LyX-Code

    [42]    'SpontInitVm'                
\layout LyX-Code

    [43]    'SpontMaxAHP'                
\layout LyX-Code

    [44]    'SpontMinTime'               
\layout LyX-Code

    [45]    'SpontMinVm'                 
\layout LyX-Code

    [46]    'SpontPeakVm'                
\layout LyX-Code

    [47]    'SpontRiseTime'              
\layout LyX-Code

    [48]    'PulseAmplitude'             
\layout LyX-Code

    [49]    'PulseBaseWidth'             
\layout LyX-Code

    [50]    'PulseDAHPMag'               
\layout LyX-Code

    [51]    'PulseFallTime'              
\layout LyX-Code

    [52]    'PulseHalfVm'                
\layout LyX-Code

    [53]    'PulseHalfWidth'             
\layout LyX-Code

    [54]    'PulseInitTime'              
\layout LyX-Code

    [55]    'PulseInitVm'                
\layout LyX-Code

    [56]    'PulseMaxAHP'                
\layout LyX-Code

    [57]    'PulseMinTime'               
\layout LyX-Code

    [58]    'PulseMinVm'                 
\layout LyX-Code

    [59]    'PulsePeakVm'                
\layout LyX-Code

    [60]    'PulseRiseTime'              
\layout LyX-Code

    [61]    'PulseSpontAmpRatio'         
\layout LyX-Code

    [62]    'ItemIndex'                  
\layout LyX-Code

Optional properties of tests_db:
\layout LyX-Code

ans = 
\layout LyX-Code

0x0 struct array with no fields.
\layout Standard

After merging, it becomes 
\layout LyX-Code

>> sdball
\layout LyX-Code

sdball
\layout LyX-Code

params_tests_db, sim dataset gpsc0501 dual cip
\layout LyX-Code

ans = 
\layout LyX-Code

    num_params: 9
\layout LyX-Code

         props: [0x0 struct]
\layout LyX-Code

      tests_db: [1x1 tests_db]
\layout LyX-Code

Optional properties of params_tests_db:
\layout LyX-Code

ans = 
\layout LyX-Code

0x0 struct array with no fields.
\layout LyX-Code

tests_db, sim dataset gpsc0501 dual cip
\layout LyX-Code

19683 rows in database with 50 columns, and 1 pages.
\layout LyX-Code

Column names:
\layout LyX-Code

    [ 1]    'NaF'                         
\layout LyX-Code

    [ 2]    'NaP'                         
\layout LyX-Code

    [ 3]    'Kv3'                         
\layout LyX-Code

    [ 4]    'Kv2'                         
\layout LyX-Code

    [ 5]    'Kv4f'                        
\layout LyX-Code

    [ 6]    'KCNQ'                        
\layout LyX-Code

    [ 7]    'SK'                          
\layout LyX-Code

    [ 8]    'CaHVA'                       
\layout LyX-Code

    [ 9]    'HCN'                         
\layout LyX-Code

    [10]    'RecIniSpontPotRatioHyp100pA' 
\layout LyX-Code

    [11]    'RecIniSpontRateRatioHyp100pA'
\layout LyX-Code

    [12]    'RecSpont1SpikeRateHyp100pA'  
\layout LyX-Code

    [13]    'RecSpont2SpikeRateHyp100pA'  
\layout LyX-Code

    [14]    'RecSpontISICVHyp100pA'       
\layout LyX-Code

    [15]    'RecSpontPotAvgHyp100pA'      
\layout LyX-Code

    [16]    'ItemIndexHyp100pA'           
\layout LyX-Code

    [17]    'IniSpontSpikeRate'           
\layout LyX-Code

    [18]    'PulseIni100msSpikeRate'      
\layout LyX-Code

    [19]    'PulseIni100msSpikeRateISI'   
\layout LyX-Code

    [20]    'PulseIni100msISICV'          
\layout LyX-Code

    [21]    'PulseIni100msRest1SpikeRate' 
\layout LyX-Code

    [22]    'PulseIni100msRest2SpikeRate' 
\layout LyX-Code

    [23]    'RecSpont1SpikeRate'          
\layout LyX-Code

    [24]    'RecSpont2SpikeRate'          
\layout LyX-Code

    [25]    'RecIniSpontRateRatio'        
\layout LyX-Code

    [26]    'IniSpontISICV'               
\layout LyX-Code

    [27]    'PulseISICV'                  
\layout LyX-Code

    [28]    'RecSpontISICV'               
\layout LyX-Code

    [29]    'PulseSFA'                    
\layout LyX-Code

    [30]    'PulseSpikeAmpDecayTau'       
\layout LyX-Code

    [31]    'PulseSpikeAmpDecayDelta'     
\layout LyX-Code

    [32]    'IniSpontPotAvg'              
\layout LyX-Code

    [33]    'PulsePotAvg'                 
\layout LyX-Code

    [34]    'RecSpontPotAvg'              
\layout LyX-Code

    [35]    'RecIniSpontPotRatio'         
\layout LyX-Code

    [36]    'SpontInitVm'                 
\layout LyX-Code

    [37]    'SpontAmplitude'              
\layout LyX-Code

    [38]    'SpontMaxAHP'                 
\layout LyX-Code

    [39]    'SpontDAHPMag'                
\layout LyX-Code

    [40]    'SpontRiseTime'               
\layout LyX-Code

    [41]    'SpontFallTime'               
\layout LyX-Code

    [42]    'SpontHalfWidth'              
\layout LyX-Code

    [43]    'PulseInitVm'                 
\layout LyX-Code

    [44]    'PulseAmplitude'              
\layout LyX-Code

    [45]    'PulseMaxAHP'                 
\layout LyX-Code

    [46]    'PulseDAHPMag'                
\layout LyX-Code

    [47]    'PulseRiseTime'               
\layout LyX-Code

    [48]    'PulseFallTime'               
\layout LyX-Code

    [49]    'PulseHalfWidth'              
\layout LyX-Code

    [50]    'ItemIndex'                   
\layout LyX-Code

Optional properties of tests_db:
\layout LyX-Code

ans = 
\layout LyX-Code

0x0 struct array with no fields.
\layout Section

Visualization
\begin_inset LatexCommand \label{sec:Visualization}

\end_inset 


\layout Subsection

Displaying database contents
\layout Standard

The 
\family typewriter 
displayRows
\family default 
 method of 
\family typewriter 
tests_db
\family default 
 can be used to display rows of a database:
\layout LyX-Code

>> displayRows(sdball, 1:3)
\layout LyX-Code

ans = 
\layout LyX-Code

    'NaF'                    [     250]    [     250]    [      1000]
\layout LyX-Code

    'NaP'                    [  2.5000]    [  2.5000]    [    2.5000]
\layout LyX-Code

    'Kv3'                    [      15]    [      15]    [        60]
\layout LyX-Code

    'Kv2'                    [       3]    [       3]    [         9]
\layout LyX-Code

    'Kv4f'                   [       5]    [       5]    [        25]
\layout LyX-Code

    'KCNQ'                   [  0.1000]    [  0.1000]    [    0.0100]
\layout LyX-Code

    'SK'                     [  8.5000]    [  8.5000]    [        17]
\layout LyX-Code

    'CaHVA'                  [      10]    [      10]    [        10]
\layout LyX-Code

    'HCN'                    [      30]    [       3]    [        30]
\layout LyX-Code

    'pAcip'                  [    -100]    [    -100]    [       100]
\layout LyX-Code

    'IniSpontISICV'          [  0.0027]    [  0.0027]    [9.1376e-04]
\layout LyX-Code

...
\layout Standard

Note that, in the output, database rows appear as columns, and database
 columns appear as rows.
 See in above Section 
\begin_inset LatexCommand \ref{sub:Sorting-the-database}

\end_inset 

 for more example outputs from 
\family typewriter 
displayRows
\family default 
.
\layout Standard


\family typewriter 
displayRows
\family default 
 returns a cell array of column names justapoxed to a matrix of values.
 This cell array is intended for display on the screen and for generating
 reports.
 The 
\family typewriter 
displayRowsTeX
\family default 
 method uses output from 
\family typewriter 
displayRows
\family default 
 to generate a LaTeX table that can be printed or converted to PDF:
\layout LyX-Code

>> tex_string = 
\layout LyX-Code

     displayRowsTeX(a_db(:, rows), 
\layout LyX-Code

                    'Selected rows indicating fast spiking neurons',
\layout LyX-Code

                    struct('height', '!'));
\layout LyX-Code

>> string2File(tex_string, 'fast_spiking.tex');
\layout Standard

With this the LaTeX code to generate a table with the given caption is saved
 in a text file called 
\family typewriter 
fast_spiking.tex
\family default 
.
 This file can then be included from a regular LaTeX document to generate
 PDF output.
 See a LaTeX manual on how to do that.
\layout Standard

An alternative to 
\family typewriter 
displayRows
\family default 
 is using the 
\family typewriter 
tests_db/rows2Struct
\family default 
 method:
\layout LyX-Code

>> s = rows2Struct(dball_full, 54023)
\layout LyX-Code

s = 
\layout LyX-Code

                            NaF: 500
\layout LyX-Code

                            NaP: 2
\layout LyX-Code

                            Kv2: 1
\layout LyX-Code

                            Kv3: 10
\layout LyX-Code

                           Kv4f: 40
\layout LyX-Code

                           KCNQ: 2
\layout LyX-Code

                             SK: 4
\layout LyX-Code

                          CaHVA: 0.0300
\layout LyX-Code

                            HCN: 1
\layout LyX-Code

                          trial: 7739
\layout LyX-Code

                          pAcip: 100
\layout LyX-Code

                  IniSpontISICV: NaN
\layout LyX-Code

                 IniSpontPotAvg: NaN
\layout LyX-Code

              IniSpontSpikeRate: 0
\layout LyX-Code

           IniSpontSpikeRateISI: 0
\layout LyX-Code

                     PulseISICV: 0.0265
\layout LyX-Code

             PulseIni100msISICV: 0.0584
\layout LyX-Code

    PulseIni100msRest1SpikeRate: 40.0089
\layout LyX-Code

    PulseIni100msRest2SpikeRate: 40.0178
\layout LyX-Code

         PulseIni100msSpikeRate: 50
\layout LyX-Code

      PulseIni100msSpikeRateISI: 43.5256
\layout LyX-Code

                    PulsePotAvg: -57.3737
\layout LyX-Code

                    PulsePotMin: NaN
\layout LyX-Code

                    PulsePotSag: NaN
\layout LyX-Code

                       PulseSFA: 1.1698
\layout LyX-Code

...
\layout Standard

This method returns the database contents as a structure array.
 It is more natural for programming interfaces to use the database contents
 in a structure array than a cell array.
 The database columns become field names in the the structure.
 If multiple rows are requested, the displayed output would not contain
 the values.
 The desired row can be reached via indexing (e.g., 
\family typewriter 
s(1)
\family default 
).
 For instance, analysis in 
\family typewriter 
cip_trace/getProfileAllSpikes
\family default 
 method is done using this method for getting statistics from the 
\family typewriter 
spikes_db
\family default 
 databases.
\layout Subsection

Plotting all measure histograms
\layout Standard

For plotting all measure histograms in a DB, the following method of 
\family typewriter 
params_tests_db
\family default 
 creates a matrix plot:
\layout LyX-Code

>> mp1 = plotTestsHistsMatrix(sdball);
\layout LyX-Code

>> plotFigure(mp1);
\layout Subsection

Plotting all parameter histograms
\layout Standard

For plotting all parameter histograms in a DB, the following method of 
\family typewriter 
params_tests_db
\family default 
 creates a horizontal plot stack:
\layout LyX-Code

>> mp1 = plotParamsHists(sdball);
\layout LyX-Code

>> plotFigure(mp1);
\layout Subsection

Plotting database statistics
\layout Standard

The 
\family typewriter 
stats_db
\family default 
 object allows keeping statistical information obtained from a database.
 Statistics are calculated using one of the 
\family typewriter 
tests_db
\family default 
 converter methods, such as 
\family typewriter 
statsAll
\family default 
, 
\family typewriter 
statsMeanStd
\family default 
, etc.: 
\layout LyX-Code

>> my_stats = statsMeanStd(my_db(:, {'IniSpontSpikeRate', 'PulseSpikeRate'}));
\layout Standard


\begin_inset Float figure
wide false
collapsed false

\layout Standard
\align center 

\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
subfigure[
\end_inset 

Default visualization for 
\family typewriter 
stats_db
\family default 
.
\begin_inset ERT
status Collapsed

\layout Standard
]{
\end_inset 


\begin_inset Graphics
	filename plot_stats_abstract.eps
	display none
	scale 50

\end_inset 


\begin_inset ERT
status Collapsed

\layout Standard
}
\end_inset 

 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
subfigure[
\end_inset 

Optional 
\family typewriter 
plot_bars 
\family default 
visualization for 
\family typewriter 
stats_db
\family default 
.
\begin_inset ERT
status Collapsed

\layout Standard
]{
\end_inset 


\begin_inset Graphics
	filename plot_stats_bars_single.eps
	display none
	scale 50

\end_inset 


\begin_inset ERT
status Collapsed

\layout Standard
}
\end_inset 


\layout Standard
\align center 

\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
subfigure[
\end_inset 

Comparing multiple 
\family typewriter 
stats_db
\family default 
s with 
\family typewriter 
plot_bars
\family default 
.
\begin_inset ERT
status Collapsed

\layout Standard
]{
\end_inset 


\begin_inset Graphics
	filename plot_stats_bars_multi.eps
	display none
	scale 50

\end_inset 


\begin_inset ERT
status Collapsed

\layout Standard
}
\end_inset 


\layout Caption


\begin_inset LatexCommand \label{figcap:Statistics-plots}

\end_inset 

Plotting statistics for two selected measures.
\end_inset 

Then, the statistics can be plotted with diamonds indicating the mean and
 symmetric errorbars indicating upper and lower extensions (SE or Std):
\layout Standard


\family typewriter 
>> plot(my_stats);
\layout Standard

which is equivalent to:
\layout LyX-Code

>> plotFigure(plot_abstract(my_stats));
\layout Standard

An alternative plotting form is using filled bars with extending errorbars:
\layout LyX-Code

>> plotFigure(plot_bars(my_stats));
\layout Standard

which are both seen in Figure 
\begin_inset LatexCommand \ref{figcap:Statistics-plots}

\end_inset 

 (a) and (b).
 The 
\family typewriter 
plot_bars
\family default 
 method is better suited for comparing statistics from multiple 
\family typewriter 
stats_db
\family default 
s coming from different sources.
 In this case, we take the first 1000 rows from the DB as a subset, and
 compare it with the statistics from the second 1000 rows:
\layout LyX-Code

>> compared_two_subset_stats = 
\layout LyX-Code

     compareStats(statsAll(mbundle.joined_db(1:1000, 
\layout LyX-Code

                                             {'IniSpontSpikeRateISI_0pA',
\layout LyX-Code

                                              'PulseIni100msSpikeRateISI_D100pA'
})), 
\layout LyX-Code

                  statsAll(mbundle.joined_db(1001:2000, 
\layout LyX-Code

                                             {'IniSpontSpikeRateISI_0pA',
\layout LyX-Code

                                              'PulseIni100msSpikeRateISI_D100pA'
})))));
\layout Standard

The combined statistics object can then be fed into 
\family typewriter 
plot_bars
\family default 
 as seen in Figure 
\begin_inset LatexCommand \ref{figcap:Statistics-plots}

\end_inset 

 (c):
\layout LyX-Code

>> plotFigure(plot_bars(compared_two_subset_stats));
\layout Subsection

Plotting all parameter-measure variations
\layout Standard

To plot all parameter-measure variations, the 
\family typewriter 
plotVarMatix
\family default 
 method of 
\family typewriter 
params_tests_db
\family default 
 can be used.
 
\family typewriter 
plotVarMatix
\family default 
 requires the DB object and the 
\family typewriter 
p_stats
\family default 
 array of 
\family typewriter 
stats_db
\family default 
 objects that hold the mean and standard error information (or possibly
 other statistics) for each of the possible parameter-measure combinations.
 The 
\family typewriter 
p_stats
\family default 
 array can be created using the 
\family typewriter 
paramsTestsHistsStats
\family default 
 method, which in turn requires the 
\family typewriter 
p_t3ds
\family default 
 array of 3-dimensional databases each of which contain effects of a parameter
 invariant of other parameters.
 The 
\family typewriter 
p_t3ds
\family default 
 array can be created using the 
\family typewriter 
invarParams
\family default 
 method.
 The sequence of commands is then becomes:
\layout LyX-Code

>> p_t3ds = invarParams(sdball)
\layout LyX-Code

>> [pt_hists, p_stats] = paramsTestsHistsStats(sdball, p_t3ds)
\layout LyX-Code

>> ap = plotVarMatrix(sdb2, p_stats)
\layout LyX-Code

>> plotFigure(ap)
\layout Standard

This will create a matrix plot with as many columns as parameters and as
 many rows as measures in the 
\family typewriter 
sdball
\family default 
 object.
 It may be difficult to read if 
\family typewriter 
sdball
\family default 
 contains large number of measures.
 One can divide the measures into two plots with the following sequence
 of commands
\layout LyX-Code

>> sdb1 = sdball(:, [1:9, 10:35])
\layout LyX-Code

>> sdb2 = sdball(:, [1:9, 36:49])
\layout Standard

by choosing all parameters in both DBs, but only some measures for each.
 Then, the plots can be created for each DB by issuing
\layout LyX-Code

>> p1_t3ds = invarParams(sdb1)
\layout LyX-Code

>> p2_t3ds = invarParams(sdb2)
\layout LyX-Code

>> [pt1_hists, p1_stats] = paramsTestsHistsStats(sdb1, p1_t3ds)
\layout LyX-Code

>> [pt2_hists, p2_stats] = paramsTestsHistsStats(sdb2, p2_t3ds)
\layout LyX-Code

>> ap1 = plotVarMatrix(sdb1, p1_stats)
\layout LyX-Code

>> plotFigure(ap1)
\layout LyX-Code

>> ap2 = plotVarMatrix(sdb2, p2_stats)
\layout LyX-Code

>> plotFigure(ap1)
\layout Subsection

Generating a report comparing two databases
\layout Standard

Most commonly a database of physiology neurons need to be compared to a
 database of a large body of simulation neurons and find best matches.
 One may need to see the match quality for a number of best matching candidates
 for each of the physiology neurons.
 Assuming multiple plots and tables are required to do a fair job of comparing
 a neuron to a thousands of simulation neurons, it becomes a difficult job
 to do this manually.
 An automatic report generation system has been built into the system for
 this purpose.
 
\layout Standard

Currently a LaTeX document is created that needs to be included in either
 a proper LaTeX document, or included in a LyX document.
\begin_inset Foot
collapsed true

\layout Standard

This document is prepared using the LyX document preparation system 
\begin_inset LatexCommand \citep{lyx-03}

\end_inset 

 which uses the 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
LaTeXe{}
\end_inset 

 typesetting language 
\begin_inset LatexCommand \citep{lamport-94}

\end_inset 

.
 LyX is copyrighted by Matthias Ettrich and covered by the terms of the
 GNU General Public License (GPL), and 
\begin_inset ERT
status Collapsed

\layout Standard

\backslash 
LaTeXe{}
\end_inset 

 is copyrighted by D.\SpecialChar ~
E.\SpecialChar ~
Knuth and the Free Software Foundation, Inc.\SpecialChar ~
and is covered
 by both the TeX copyright and the GNU GPL.
\end_inset 

 The including document should provide the context in which the included
 part becomes meaningful.
 The report contains a set of tables and figures with proper captions.
 The table of contents, list of figures and list of tables facilities of
 LaTeX becomes useful to make the automatically generated document eaisly
 readable.
 
\layout Standard

The report can be created with the command
\layout LyX-Code

>> tex_string = rankVsAllDB(sdb, phys_sdb, 
\layout LyX-Code

                            fileset, phys_fileset);
\layout Standard

where the simulation database 
\family typewriter 
sdb
\family default 
 is searched for best matches to each row of physiology database 
\family typewriter 
phys_sdb
\family default 
.
 The dataset for each is provided for the report to contain raw data associated
 with best matches.
 The obtained report contained in 
\family typewriter 
tex_string
\family default 
 can be saved as a ASCII LaTeX file with
\layout LyX-Code

>> string2File(tex_string, 'myreport.tex');
\layout Section

Function Reference
\begin_inset LatexCommand \label{sec:Function-Reference}

\end_inset 


\layout Standard

See Section 
\begin_inset LatexCommand \vref{sub:Finding-your-way-around}

\end_inset 

 on how to get online help about the software within 
\noun on 
Matlab
\noun default 
.
\layout Standard

[Supposed to have all class and method documentation automagically generated
 from matlab help files.]
\layout Standard


\begin_inset LatexCommand \BibTeX[bibtotoc,plainnat]{ref}

\end_inset 


\the_end
