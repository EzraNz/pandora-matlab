TODO
--------------------
- improve visualization of cip_traces
- remove not-a-spikes from spikes object
- analyze each spike individually, then generate mean, mode, median, and unimodality score
- create custom class to eliminate high-variance neurons? how to get sdb?
- perl doclet generator
+ remove DAHPMag from depol_tests
- add method in dataset to load item by reading database row or in db vice-versa.
	- use db id for the prof id
- ignore all parameters in comparisons?
- plot average neuron comparison matches.
- plot matches that vary a lot in parameter values, but same outcome
- make dualcip a new db and make it load profiles, etc.
- for version 0.6:
	- add new physiology dataset loader
- for version 0.7:
	- new AP thr method, and look at all spikes
- for version 1.0:
	- add dataset connection to tests_db 
		- put it in props for now?
		- make version-aware loader?
	- put params in dataset, params_results_profile
- fix fillederrorbar with new Matlab
- Make tests_db save and load its dataset on request
	- overload saveobj and loadobj methods
- tests_db
	- add arithmetic operations that operate on the data matrix
	+ add horzcat, vertcat methods to concat rows or columns (!)
	+ print column numbers in display
	+ define all operations as row logical functions
	+ complex subsref for tests_db. 
- add plot-frame and docgen classes
  - allow fontsize change to fit more on a single page [can use export size for that]
  - clustering histograms?
  - fix varboxplot to return correct y-axis limits
  - Replace older plot methods with plotFigure(plot_abstract(.)) combinations
	- what to do with Interpreter=None stuff?
  - matrix color plot
  + allow adjusting location of title in stack plots
  + invar param value should be indicated on plotPages
  + classes should have function that returns plot_abstract
  + @plot_abstract is one x-y plot w/ legends, etc.
  + @plot_stack, places plots on subplots.
  + sortrows in histograms.m
  + histograms should have same axis limits
  + @plot_abstract/superposePlots, superposes plots on same axis, and 
    return a new plot_abstract object
- objects don't take more space when they're used again, has implications on design:
	- put link to dataset from db
	- put links to previous db's for a chain of operations
- comparing physiology data
	+ make tabular display
- Make params_tests_profile to use arrays rather than cell arrays
	- do for rest of profile elements
	+ had to remove size member function
	+ may need to modify subsref [if an array is passed, then call built-in function]
	+ then make plot methods operate on arrays and return plot arrays
- update documentation 
	+ update README
	- make first description no longer than one line on all constructors
	- Make PDF with code design
		- add class diagram with converter methods
- high-order methods:
	+ factor analysis
	+ shuffle predicition
	- pca
	- ica
	- clustering (use for finding multiple solutions?)
		- use ANOVA for showing different distributions
		- need this for finding parameter clusters matching phys data?
+ add an addItem method to datasets
+ new subclass for custom analysis
	- add plotTestStats function to group things together [?]

- CVS
  - present CVS, start using it
  - move this repository to djlab account?
+ add min ahp time to DB
+ replace '_' in latex outputs
+ ignore NeuronId while comparison and do the comparison again
+ profile:
	+ make a converter method from params_tests_db to get the profile
	+ make the profile constructor simple
	+ put all test results into the results structure
	+ overload the get method to look into the results structure
+ matrix stack plot
+ new plot & data type for mean and stds of each test and param value
	+ swapRowsPages, then find statsMeanStd
	+ statsMeanStd needs page-capable mean and std funcs
	+ create special plot with vectors and errorbars
	+ do it over all parameters in the profile
	+ then plot a test for all parameters in the same way
	+ use boxplots
+ poster size: 1.75x1.1 m^2, 68"x43"
+ sortrows(tests_db) only sorts one page and applies to all?
	+ invarValues should've been sorted already? [no, only other columns are sorted]
+ add calcSlowInact to @cip_trace
+ add cip_trace_fileset class
+ make abstract profile class to describe the getResults method
+ Make Matlab contents file
+ getResults for @spikes, @trace
+ Make README file
+ make spike checks in cip_trace_profile
+ make specialized directory for brute_aug_04, move cip_trace_profile there
	+ first make a general cip_trace_profile which takes ready-made objs
+ remove conflicting classes from the cen_matlab module
